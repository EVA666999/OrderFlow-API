volumes:
  pg_data1:
  static_data:
  media_data:
  kafka_data:
  zookeeper_data:

services:
  # PostgreSQL
  db1:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data1:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend_network

  # Redis (для Celery)
  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend_network


  # Django (backend)
  backend:
    build: ./api
    env_file: .env
    volumes:
      - static_data:/staticfiles
      - media_data:/media
      - ./api:/app
    ports:
      - "8000:8000"
    depends_on:
      - db1
      - redis
    networks:
      - backend_network
    command: >
      bash -c "
        sleep 10 &&
        python manage.py makemigrations && 
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn api.wsgi:application --bind 0.0.0.0:8000
      "

  # Celery Worker (для обработки задач)
  celery_worker:
    build: ./api
    volumes:
      - ./api:/app
    env_file: .env
    depends_on:
      - backend
      - redis
    networks:
      - backend_network
    command: celery -A api worker --loglevel=info

  # Celery Beat (для регулярных задач)
  celery_beat:
    build: ./api
    volumes:
      - ./api:/app
    env_file: .env
    depends_on:
      - backend
      - redis
    networks:
      - backend_network
    command: celery -A api beat --loglevel=info

  # Nginx для проксирования
  nginx:
    image: nginx:1.22.1
    volumes:
      - ./api/nginx/nginx.local.conf:/etc/nginx/conf.d/default.conf
      - static_data:/staticfiles
      - media_data:/media
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - backend_network
    restart: always

networks:
  backend_network:
    driver: bridge